<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BookLibraryDataSet" targetNamespace="http://tempuri.org/BookLibraryDataSet.xsd" xmlns:mstns="http://tempuri.org/BookLibraryDataSet.xsd" xmlns="http://tempuri.org/BookLibraryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BookLibraryConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BookLibraryConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings._19DTHJB1_Long_Phuc_Trung.Properties.Settings.GlobalReference.Default.BookLibraryConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TacGiaTableAdapter" GeneratorDataComponentClassName="TacGiaTableAdapter" Name="TacGia" UserDataComponentName="TacGiaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BookLibraryConnectionString1 (Settings)" DbObjectName="BookLibrary.dbo.TacGia" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TacGia] WHERE (([MaTG] = @Original_MaTG) AND ((@IsNull_TenTG = 1 AND [TenTG] IS NULL) OR ([TenTG] = @Original_TenTG)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MaTG" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MaTG" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenTG" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenTG" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TacGia] ([MaTG], [TenTG]) VALUES (@MaTG, @TenTG);
SELECT MaTG, TenTG FROM TacGia WHERE (MaTG = @MaTG)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MaTG" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MaTG" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenTG" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaTG, TenTG FROM dbo.TacGia</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TacGia] SET [MaTG] = @MaTG, [TenTG] = @TenTG WHERE (([MaTG] = @Original_MaTG) AND ((@IsNull_TenTG = 1 AND [TenTG] IS NULL) OR ([TenTG] = @Original_TenTG)));
SELECT MaTG, TenTG FROM TacGia WHERE (MaTG = @MaTG)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MaTG" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MaTG" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenTG" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MaTG" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MaTG" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenTG" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenTG" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenTG" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaTG" DataSetColumn="MaTG" />
              <Mapping SourceColumn="TenTG" DataSetColumn="TenTG" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BookLibraryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BookLibraryDataSet" msprop:Generator_UserDSName="BookLibraryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TacGia" msprop:Generator_TableClassName="TacGiaDataTable" msprop:Generator_TableVarName="tableTacGia" msprop:Generator_TablePropName="TacGia" msprop:Generator_RowDeletingName="TacGiaRowDeleting" msprop:Generator_RowChangingName="TacGiaRowChanging" msprop:Generator_RowEvHandlerName="TacGiaRowChangeEventHandler" msprop:Generator_RowDeletedName="TacGiaRowDeleted" msprop:Generator_UserTableName="TacGia" msprop:Generator_RowChangedName="TacGiaRowChanged" msprop:Generator_RowEvArgName="TacGiaRowChangeEvent" msprop:Generator_RowClassName="TacGiaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaTG" msprop:Generator_ColumnVarNameInTable="columnMaTG" msprop:Generator_ColumnPropNameInRow="MaTG" msprop:Generator_ColumnPropNameInTable="MaTGColumn" msprop:Generator_UserColumnName="MaTG">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TenTG" msprop:Generator_ColumnVarNameInTable="columnTenTG" msprop:Generator_ColumnPropNameInRow="TenTG" msprop:Generator_ColumnPropNameInTable="TenTGColumn" msprop:Generator_UserColumnName="TenTG" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TacGia" />
      <xs:field xpath="mstns:MaTG" />
    </xs:unique>
  </xs:element>
</xs:schema>